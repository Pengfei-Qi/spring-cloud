server:
  port: 8081

spring:
  application:
    name: spring-cloud-consumer

#eureka配置相关
#customize:
#  eureka:
#    host:
#      host1: eureka-server
#      host2: eureka-server2
#      host3: eureka-server3
#    port:
#      port1: 7001
#      port2: 7002
#      port3: 7003

##eureka配置相关
#eureka:
#  instance:
#    hostname: localhost
#  client:
#    # 向服务端注册自己
#    register-with-eureka: true
#    # 从Eureka Server获取注册的服务信息
#    fetch-registry: true
#    service-url:
#      defaultZone: http://${customize.eureka.host.host1}:${customize.eureka.port.port1}/eureka,http://${customize.eureka.host.host2}:${customize.eureka.port.port2}/eureka,http://${customize.eureka.host.host3}:${customize.eureka.port.port3}/eureka


# feign 调用相关
feign:
  client:
    spring-cloud-provider:
      #相当于Request.Options
      connectTimeout: 5000
      #相当于Request.Options
      readTimeout: 5000
#      #配置Feign的日志级别，相当于代码配置方式中的Logger
      loggerLevel: full
      #  #feign配置文件的方式比java配置优先级要高,如果想java配置优先级开这里可以设置为false
    default-to-properties: false
  #开启Feign对与请求和响应的压缩
  compression:
    request:
      enabled: true
      mime-types: [application/json, application/xml, text/plain, text/html, text/css, text/javascript, application/javascript, application/ecmascript, application/x-javascript, application/x-ecmascript]
      min-request-size: 2048
    response:
      enabled: true

# 指定hystrix的配置文件
management:
  endpoints:
    web:
      exposure:
        include: "*"  #配置暴露全部的监控接口
      # 自定义配置暴露的监控接口,默认为 /actuator
#      base-path: /
  endpoint:
    health:
      enabled: true
      show-details: always #配置健康接口显示详细信息

# hystrix的监控面板配置
hystrix:
  dashboard:
    proxy-stream-allow-list: "*"

# 远程仓库返回的数据模型
data:
  env: NaN
  user:
    username: NaN
    password: NaN
    tips: 'NaN'

#  http://host:port/actuator/info 的访问信息
info:
  name: ${spring.application.name}
  version: 1.0-SNAPSHOT
  port: 8081
  config-server:
    id: spring-cloud-config-server
    port: 8010
    # 返回的数据模型
    model:
      url:
        - http://localhost:8010/${spring.application.name}/dev/master
        - http://localhost:8010/${spring.application.name}/prod
        - http://localhost:8010/${spring.application.name}-dev.yml
        - http://localhost:8010/${spring.application.name}-prod.yml
        - http://localhost:8010/master/${spring.application.name}-prod.yml
